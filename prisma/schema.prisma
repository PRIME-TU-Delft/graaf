// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Program <*--*> Course
model Program {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  courses   Course[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum CourseType {
  COURSE
  SANDBOX
}

// Course <*--*> Program
// Course <---*> Graph
model Course {
  code String @id @unique
  name String

  programs Program[]
  graphs   Graph[]

  isArchived Boolean    @default(false)
  type       CourseType @default(COURSE)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

// Graph <*---> Course
model Graph {
  id       Int    @id @default(autoincrement())
  name     String
  courseId String

  course  Course   @relation(fields: [courseId], references: [code])
  domains Domain[]
  // subjects		Subject[]
  // lectures		Lecture[]
  // links			Link[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([courseId, name])
}

enum DomainStyle {
  PROSPEROUS_RED
  ENERGIZING_ORANGE
  SUNNY_YELLOW
  ELECTRIC_GREEN
  CONFIDENT_TURQUOISE
  MYSTERIOUS_BLUE
  MAJESTIC_PURPLE
  POWERFUL_PINK
  NEUTRAL_GRAY
  SERIOUS_BROWN
}

model Domain {
  id Int @id @default(autoincrement())

  name  String
  style DomainStyle?
  order Int // Domains is a SORTABLE ARRAY this order makes sure this order is perserved on reload

  // physical position in the graph
  x Int @default(0)
  y Int @default(0)

  graphId          Int
  graph            Graph    @relation(fields: [graphId], references: [id], onDelete: Cascade)
  // subjects      Subject[]
  incommingDomains Domain[] @relation("DomainRelation")
  outgoingDomains  Domain[] @relation("DomainRelation")
}
